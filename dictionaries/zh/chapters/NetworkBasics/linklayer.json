{
  "id": 8,
  "title": "链路层",
  "lessonContent": "在TCP/IP模型的底部是链路层。这一层是硬件特定的层。\n\n在链路层，我们的数据包再次封装为称为帧的东西。帧头附加了我们主机的源MAC地址、目的MAC地址、校验和数据包分隔符，以便接收方可以知道数据包何时结束。\n\n幸运的是，我们在同一个网络上，因此我们的数据包不必走太远。首先，链路层将我的源MAC地址附加到帧头，但它也需要知道Patty的MAC地址。它如何知道那个地址，我如何找到它，因为它不在互联网上？我们使用ARP！\n\n<b>ARP（地址解析协议）</b>\n\nARP查找与IP地址关联的MAC地址。ARP在同一个网络中使用。如果Patty不在同一个网络上，我们将使用路由系统确定下一个将接收数据包的路由器，一旦我们在同一个网络上，我们就可以使用ARP。\n\n一旦我们在同一个网络上，系统首先使用ARP查找表，该表存储了关于哪个IP地址与哪个MAC地址相关联的信息。如果值不在表中，则使用ARP。然后系统将使用ARP协议向网络发送广播消息，以查找哪个主机具有IP地址10.10.1.4。广播消息是一种特殊消息，发送到网络上的所有主机（因为发送广播而得名）。任何具有请求的IP地址的机器都将回复一个包含IP地址和MAC地址的ARP数据包。\n\n现在我们已经拥有了所需的数据，IP地址和MAC地址，我们的链路层通过网络接口卡将此帧转发到下一个设备，并找到Patty的网络。这一步比我刚刚解释的要复杂一些，但我们将在路由课程中讨论更多细节。\n\n这就是一个简单（或者不那么简单）的数据包在TCP/IP层中的传输。请记住，数据包不是单向传输的。我们甚至还没有到达Patty的网络！在通过网络时，需要至少通过TCP/IP模型两次才能发送或接收任何数据。实际上，数据包的传输看起来会像这样：\n\n<b>数据包传输</b>\n\n<ol>\n<li>Pete给Patty发送电子邮件：这些数据被发送到传输层。</li>\n<li>传输层将数据封装为TCP或UDP头部以形成一个段，段附加目的地和源TCP或UDP端口，然后将该段发送到网络层。</li>\n<li>网络层将TCP段封装在IP数据包中，附加源和目的IP地址。然后将数据包路由到链路层。</li>\n<li>数据包然后到达Pete的物理硬件，并被封装在一个帧中。源和目的MAC地址被添加到帧中。</li>\n<li>Patty通过她的物理层接收到这个数据帧，并检查每个帧的数据完整性，然后解封帧内容并将IP数据包发送到网络层。</li>\n<li>网络层读取数据包以查找先前附加的源和目的IP地址。它检查它的IP是否与目的IP相同，是的！它解封数据包并将段发送到传输层。</li>\n<li>传输层解封段，检查TCP或UDP端口号，并根据这些端口号向应用层建立连接。</li>\n<li>应用层从传输层接收数据，并根据指定的端口号将其呈现给Patty，形成最终的电子邮件消息。</li>\n</ol>",
  "exercise": "本课程没有练习。",
  "quizQuestion": "在同一个网络中用什么来查找MAC地址？",
  "quizAnswer": "ARP",
  "slug": "linklayer"
}