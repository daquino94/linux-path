{
  "id": 2,
  "title": "修改权限",
  "lessonContent": "使用 <b>chmod</b> 命令可以轻松更改权限。\n\n首先，选择要更改的权限集，用户、组或其他。您可以使用 <b>+</b> 或 <b>-</b> 添加或删除权限，让我们看一些示例。\n\n<b>在文件上添加权限位</b>\n<pre>$ chmod u+x myfile</pre>\n\n上述命令的含义是：通过在用户集上添加可执行权限位来更改 myfile 的权限。因此，现在用户对此文件具有可执行权限！\n\n<b>从文件中删除权限位</b>\n<pre>$ chmod u-x myfile</pre>\n\n<b>在文件上添加多个权限位</b>\n<pre>$ chmod ug+w</pre>\n\n还有另一种使用数字格式更改权限的方法。这种方法允许您一次性更改所有权限。不再使用 r、w 或 x 来表示权限，而是使用数字表示单个权限集。因此，无需使用 g 表示组或使用 u 表示用户。\n\n以下是数字表示：\n\n<ul>\n<li>4：读权限</li>\n<li>2：写权限</li>\n<li>1：执行权限</li>\n</ul>\n\n让我们看一个示例：\n\n<pre>$ chmod 755 myfile</pre>\n\n你能猜到我们给这个文件赋予了什么权限吗？让我们来分解一下，现在 755 包含了所有权限。第一个数字（7）表示用户权限，第二个数字（5）表示组权限，最后一个 5 表示其他用户权限。\n\n等一下，7 和 5 上面没列出来，我们从哪里得到这些数字的？记住，现在我们将所有权限组合成一个数字，所以你需要进行一些数学运算。\n\n7 = 4 + 2 + 1，所以 7 是用户权限，具有读、写和执行权限\n\n5 = 4 + 1，组具有读和执行权限\n\n5 = 4 + 1，所有其他用户具有读和执行权限\n\n需要注意的一点是：随意更改权限并不是一个好主意，您可能会潜在地暴露一个敏感文件供所有人修改，但是很多时候您确实需要更改权限，只是在使用 chmod 命令时要小心谨慎。",
  "exercise": "更改一些基本文本文件的权限，并在执行 ls -l 时查看位的变化。",
  "quizQuestion": "在使用数字格式时，哪个数字代表读权限？",
  "quizAnswer": "4",
  "slug": "修改权限"
}