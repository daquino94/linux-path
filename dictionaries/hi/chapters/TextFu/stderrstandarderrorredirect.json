{
  "id": 3,
  "title": "stderr (स्टैंडर्ड त्रुटि)",
  "lessonContent": "अब कुछ थोड़ा अलग करने की कोशिश करते हैं, अब आपके सिस्टम पर मौजूद नहीं होने वाले एक निर्देशिका की सामग्री को सूचीबद्ध करने की कोशिश करते हैं और फिर से आउटपुट को peanuts.txt फ़ाइल में रीडायरेक्ट करने के लिए।\n\n<pre>$ ls /fake/directory > peanuts.txt </pre>\n\nआपको क्या दिखना चाहिए: \n\n<pre>ls: cannot access /fake/directory: No such file or directory</pre>\n\nअब आप शायद सोच रहे होंगे, क्या वह संदेश फ़ाइल में भेज दिया जाना चाहिए था? यहाँ वास्तव में एक और I/O स्ट्रीम है जिसे स्टैंडर्ड त्रुटि (stderr) कहा जाता है। डिफ़ॉल्ट रूप से, stderr भी अपना आउटपुट स्क्रीन पर भेजता है, यह stdout से पूरी तरह से भिन्न स्ट्रीम है। इसलिए आपको इसका आउटपुट एक अलग तरीके से रीडायरेक्ट करना होगा। \n\nदुर्भाग्यवश रीडायरेक्टर <b>&lt;</b> या <b>&gt;</b> का इस्तेमाल करने की तरह अच्छा नहीं है लेकिन यह काफी करीब है। हमें फाइल डिस्क्रिप्टर का उपयोग करना होगा। फाइल डिस्क्रिप्टर एक ऐसा गैर-नकारात्मक संख्या है जिसका उपयोग एक फ़ाइल या स्ट्रीम तक पहुँचने के लिए किया जाता है। हम इसके बारे में विस्तार से बात करेंगे, लेकिन अब यह जान लें कि stdin, stdout और stderr के लिए फाइल डिस्क्रिप्टर क्रमशः 0, 1, और 2 है। \n\nइसलिए अब अगर हम अपनी stderr को फ़ाइल में रीडायरेक्ट करना चाहते हैं तो हम यह कर सकते हैं: \n\n<pre>$ ls /fake/directory 2> peanuts.txt</pre>\n\nआपको केवल stderr संदेश peanuts.txt में दिखना चाहिए। \n\nअब अगर मैं चाहता हूँ कि मैं peanuts.txt फ़ाइल में stderr और stdout दोनों देखूँ? फाइल डिस्क्रिप्टर के साथ भी यह संभव है: \n\n<pre>$ ls /fake/directory > peanuts.txt 2>&1</pre>\n\nयह ls /fake/directory के परिणाम को peanuts.txt फ़ाइल में भेजता है और फिर यह stderr को stdout के माध्यम से 2>&1 पर रीडायरेक्ट करता है। यहाँ क्रियाओं का क्रम मायने रखता है, 2>&1 stderr को वहाँ भेजता है जहाँ stdout की दिशा है। इस मामले में stdout एक फ़ाइल की दिशा में है, इसलिए 2>&1 stderr को भी एक फ़ाइल में भेजता है। इसलिए अगर आप उस peanuts.txt फ़ाइल को खोलते हैं तो आपको stderr और stdout दोनों दिखने चाहिए। हमारे मामले में, उपरोक्त कमांड केवल stderr को आउटपुट करता है।\n\nstderr और stdout दोनों को एक फ़ाइल में रीडायरेक्ट करने का एक छोटा तरीका है:\n\n<pre>$ ls /fake/directory &> peanuts.txt</pre>\n\nअब अगर मुझे उस सारी कचरे को नहीं चाहिए और मैं stderr संदेशों को पूरी तरह से हटाना चाहता हूँ? तो आप आउटपुट को एक विशेष फ़ाइल /dev/null पर रीडायरेक्ट कर सकते हैं और यह किसी भी इनपुट को खारिज कर देगा।\n\n<pre>$ ls /fake/directory 2> /dev/null</pre>",
  "exercise": "निम्नलिखित कमांड क्या कर रहा है? \n\n<pre>$ ls /fake/directory >> /dev/null 2>&1</pre>",
  "quizQuestion": "stderr के लिए रीडायरेक्टर क्या है?",
  "quizAnswer": "2>",
  "slug": "stderrstandarderrorredirect"
}