{
  "id": 11,
  "title": "इनोड्स",
  "lessonContent": "हमारी फ़ाइल सिस्टम कैसे हमारी वास्तविक फ़ाइलों और इन फ़ाइलों का प्रबंधन करने वाले डेटाबेस से बना होता है? डेटाबेस को इनोड तालिका के रूप में जाना जाता है।\n\n<b>इनोड क्या है?</b>\n\nएक इनोड (इंडेक्स नोड) इस तालिका में एक प्रविष्टि है और हर फ़ाइल के लिए एक होता है। यह फ़ाइल के बारे में सब कुछ वर्णित करता है, जैसे कि:\n\n<ul>\n<li>फ़ाइल प्रकार - नियमित फ़ाइल, निर्देशिका, वर्णन उपकरण, आदि</li>\n<li>मालिक</li>\n<li>समूह</li>\n<li>पहुँच अनुमतियाँ</li>\n<li>समय चिह्न - mtime (अंतिम फ़ाइल संशोधन का समय), ctime (अंतिम गुण बदलने का समय), atime (अंतिम पहुँच का समय)</li>\n<li>फ़ाइल के लिए हार्डलिंक्स की संख्या</li>\n<li>फ़ाइल का आकार</li>\n<li>फ़ाइल के लिए निर्धारित ब्लॉकों की संख्या</li>\n<li>फ़ाइल के डेटा ब्लॉक्स के पॉइंटर - सबसे महत्वपूर्ण!</li>\n</ul>\n\nमुख्य रूप से इनोड्स फ़ाइल के बारे में सब कुछ संग्रहित करते हैं, केवल फ़ाइल का नाम और फ़ाइल स्वयं छोड़कर!\n\n<b>इनोड्स कब बनाए जाते हैं?</b>\n\nजब एक फ़ाइल सिस्टम बनाई जाती है, तो इनोड्स के लिए जगह भी आवंटित की जाती है। डिस्क के आयाम और अधिक के आधार पर आपको कितना इनोड स्थान चाहिए यह निर्धारित करने वाले एल्गोरिदम होते हैं। आपने अपने जीवन में कभी न कभी डिस्क स्थान की समस्याओं के लिए त्रुटियाँ देखी होंगी। वैसे ही इनोड्स के लिए भी यह समस्या उत्पन्न हो सकती है (हालांकि कम होती है), आप इनोड्स से खत्म हो सकते हैं और फिर अधिक फ़ाइलें नहीं बना सकते। याद रखें डेटा संग्रहण डेटा और डेटाबेस (इनोड्स) दोनों पर निर्भर करता है।\n\nअपने सिस्टम पर बचे हुए इनोड्स की संख्या देखने के लिए, आप <b>df -i</b> कमांड का उपयोग करें\n\n<b>इनोड सूचना</b>\n\nइनोड्स को संख्याओं द्वारा पहचाना जाता है, जब एक फ़ाइल बनाई जाती है तो उसे एक इनोड संख्या सौंपी जाती है, संख्या क्रमशः सौंपी जाती है। हालांकि, कभी-कभार आपको यह ध्यान देने की आवश्यकता है कि जब आप एक नई फ़ाइल बनाते हैं, तो उसे एक इनोड संख्या मिलती है जो अन्यों से कम होती है, यह इसलिए है क्योंकि एक बार जब इनोड्स हटा दिए जाते हैं, तो वे अन्य फ़ाइलों द्वारा पुनः प्रयोग किए जा सकते हैं। इनोड संख्याएँ देखने के लिए <b>ls -li</b> चलाएं:\n\n<pre>\npete@icebox:~$ ls -li\n140 drwxr-xr-x 2 pete pete 6 Jan 20 20:13 Desktop\n141 drwxr-xr-x 2 pete pete 6 Jan 20 20:01 Documents\n</pre>\n\nइस कमांड में पहला क्षेत्र इनोड संख्या सूचित करता है।\n\nआप स्टैट के साथ एक फ़ाइल के बारे में विस्तृत जानकारी भी देख सकते हैं, यह आपको इनोड के बारे में जानकारी देता है।\n\n<pre>\npete@icebox:~$ stat ~/Desktop/\n  File: ‘/home/pete/Desktop/’\n  Size: 6               Blocks: 0          IO Block: 4096   directory\nDevice: 806h/2054d      Inode: 140         Links: 2\nAccess: (0755/drwxr-xr-x)  Uid: ( 1000/   pete)   Gid: ( 1000/   pete)\nAccess: 2016-01-20 20:13:50.647435982 -0800\nModify: 2016-01-20 20:13:06.191675843 -0800\nChange: 2016-01-20 20:13:06.191675843 -0800\n Birth: -\n</pre>\n\n\n<b>इनोड्स फ़ाइलों को कैसे खोजते हैं?</b>\n\nहमें पता है कि हमारा डेटा कहीं डिस्क पर है, दुर्भाग्य से यह संभावना है कि यह क्रमशः स्टोर नहीं किया गया था, इसलिए हमें इनोड्स का उपयोग करना पड़ता है। इनोड्स आपकी फ़ाइलों के वास्तविक डेटा ब्लॉक्स को पॉइंट करते हैं। एक साधारण फ़ाइल सिस्टम में (सभी एक जैसे काम नहीं करते), प्रत्येक इनोड 15 पॉइंटर्स शामिल होते हैं, पहले 12 पॉइंटर्स सीधे डेटा ब्लॉक्स को पॉइंट करते हैं। 13वां पॉइंटर, और ब्लॉक को पॉइंट करता है जिसमें अधिक ब्लॉक्स के पॉइंटर्स होते हैं, 14वां पॉइंटर एक और नेस्टेड पॉइंटर्स के ब्लॉक को पॉइंट करता है, और 15वां पॉइंटर फिर से एक और पॉइंटर्स के ब्लॉक को पॉइंट करता है! गंभीर, मुझे पता है! इसे इस प्रकार किया जाता है क्योंकि हर इनोड के लिए इनोड संरचना को समान रखने के लिए किया जाता है, लेकिन विभिन्न आकारों की फ़ाइलों को संदर्भित करने की क्षमता रखने के लिए। यदि आपके पास एक छोटी फ़ाइल है, तो आप पहले 12 सीधे पॉइंटर्स के साथ इसे तेजी से खोज सकते हैं, बड़ी फ़ाइलें पॉइंटर्स के नेस्ट्स के साथ मिल सकती हैं। चाहे जैसे भी हो, इनोड संरचना हर इनोड के लिए समान है, लेकिन विभिन्न आकारों की फ़ाइलों का संदर्भ करने की क्षमता रखने के लिए।",
  "exercise": "विभिन्न फ़ाइलों के लिए कुछ इनोड संख्याएँ देखें, जिन्हें आम तौर पर पहले बनाया जाता है?",
  "quizQuestion": "आप अपने सिस्टम पर बचे हुए इनोड्स की संख्या कैसे देखते हैं?",
  "quizAnswer": "df -i",
  "slug": "inodes"
}