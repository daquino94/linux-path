{
  "id": 7,
  "title": "ソースコードのコンパイル",
  "lessonContent": "しばしば、純粋なソースコードの形でしか提供されていないマイナーなパッケージに遭遇することがあります。そのソースコードパッケージをコンパイルしてシステムにインストールするためには、いくつかのコマンドを使用する必要があります。\n\nまず最初に、ソースコードをコンパイルするためのツールをインストールするソフトウェアが必要です。\n\n<pre>$ sudo apt install build-essential</pre>\n\nそれを行ったら、おそらく .tar.gz ファイルであるパッケージファイルの内容を展開します。\n\n<pre>$ tar -xzvf package.tar.gz</pre>\n\n何をする前に、パッケージ内の README や INSTALL ファイルを見てください。時々、特定のインストール手順が記載されています。\n\n開発者が使用したコンパイル方法に応じて、cmake やその他のコマンドを使用する必要があることがあります。\n\nただし、最も一般的には基本的な make コンパイルが見られるため、それについて説明します。\n\nパッケージの内容には configure スクリプトが含まれており、このスクリプトはシステム上の依存関係をチェックし、何かが不足している場合はエラーが表示され、それらの依存関係を修正する必要があります。\n\n<pre>$ ./configure</pre>\n\n<b>./</b> は、現在のディレクトリでスクリプトを実行することを可能にします。\n\n<pre>$ make</pre>\n\nパッケージの内容には、ソフトウェアを構築するためのルールが含まれた Makefile というファイルがあります。make コマンドを実行すると、このファイルを参照してソフトウェアを構築します。\n\n<pre>$ sudo make install</pre>\n\nこのコマンドは実際にパッケージをインストールし、正しいファイルを正しい場所にコピーします。\n\nパッケージをアンインストールしたい場合は、次のコマンドを使用します。\n\n<pre>$ sudo make uninstall</pre>\n\nmake install を使用する際は注意が必要です。バックグラウンドで何が行われているかを実際には理解していないかもしれません。このパッケージを削除することに決めた場合、実際にはすべてを削除していないかもしれません。代わりに、私が説明した make install についてすべてを忘れて、<b>checkinstall</b> コマンドを使用してください。このコマンドは、簡単にインストールおよびアンインストールできる .deb ファイルを作成します。\n\n<pre>$ sudo checkinstall</pre>\n\nこのコマンドは基本的に「make install」を行い、.deb パッケージをビルドしてインストールします。後でパッケージを簡単に削除できるようになります。",
  "exercise": "信頼できるサイトからソースコードプログラムを見つけ、ソースからインストールしてください。",
  "quizQuestion": "make install の代わりに常に何を使用すべきですか？",
  "quizAnswer": "checkinstall",
  "slug": "compilesourcecode"
}