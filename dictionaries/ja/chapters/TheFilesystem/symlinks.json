{
  "id": 12,
  "title": "シンボリックリンク",
  "lessonContent": "以前の i ノード 情報の例を使用しましょう：\n\n<pre>\npete@icebox:~$ ls -li\n140 drwxr-xr-x 2 pete pete 6 Jan 20 20:13 Desktop\n141 drwxr-xr-x 2 pete pete 6 Jan 20 20:01 Documents\n</pre>\n\nls コマンドの 3 番目のフィールドを無視してきたことに気づいたかもしれませんが、そのフィールドはリンク数です。リンク数はファイルが持つハードリンクの総数であり、現時点ではそれが何を意味するかわかりません。ですので、まずはリンクについて説明しましょう。\n\n<b>シンボリックリンク</b>\n\nWindows オペレーティングシステムでは、ショートカットと呼ばれるものがあります。ショートカットは他のファイルへのエイリアスに過ぎません。元のファイルに何かを行うと、ショートカットが壊れる可能性があります。Linux では、ショートカットの相当物はシンボリックリンク（またはソフトリンクまたはシンボリックリンク）です。シンボリックリンクを使用すると、ファイル名で他のファイルにリンクできます。Linux で見られる他のタイプのリンクはハードリンクです。これらは実際には i ノード へのリンクを持つ別のファイルです。シンボリックリンクから始めて、実践的な例を見てみましょう。\n\n<pre>\npete@icebox:~/Desktop$ echo 'myfile' > myfile\npete@icebox:~/Desktop$ echo 'myfile2' > myfile2\npete@icebox:~/Desktop$ echo 'myfile3' > myfile3\n\npete@icebox:~/Desktop$ ln -s myfile myfilelink\npete@icebox:~/Desktop$ ls -li\ntotal 12\n  151 -rw-rw-r-- 1 pete pete 7 Jan 21 21:36 myfile\n93401 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile2\n93402 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile3\n93403 lrwxrwxrwx 1 pete pete 6 Jan 21 21:39 myfilelink -> myfile\n</pre>\n\nmyfile にポイントする myfilelink という名前のシンボリックリンクを作成しました。シンボリックリンクは -> で示されます。新しい i ノード番号が取得されたことに注意してください。シンボリックリンクは単にファイルであり、ファイル名にポイントします。シンボリックリンクを変更すると、ファイルも変更されます。i ノード番号はファイルシステムに固有であり、1 つのファイルシステム内で同じ i ノード番号を持つことはできません。つまり、i ノード番号で異なるファイルシステムのファイルを参照することはできません。ただし、シンボリックリンクを使用すると、i ノード番号ではなくファイル名が使用されるため、異なるファイルシステム間で参照できます。\n\n<b>ハードリンク</b>\n\nハードリンクの例を見てみましょう：\n\n<pre>\npete@icebox:~/Desktop$ ln myfile2 myhardlink\npete@icebox:~/Desktop$ ls -li\ntotal 16\n  151 -rw-rw-r-- 1 pete pete 7 Jan 21 21:36 myfile\n93401 -rw-rw-r-- 2 pete pete 8 Jan 21 21:36 myfile2\n93402 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile3\n93403 lrwxrwxrwx 1 pete pete 6 Jan 21 21:39 myfilelink -> myfile\n93401 -rw-rw-r-- 2 pete pete 8 Jan 21 21:36 myhardlink\n</pre>\n\nハードリンクは単に同じ i ノードへのリンクを持つ別のファイルを作成します。したがって、myfile2 または myhardlink の内容を変更した場合、両方に変更が反映されますが、myfile2 を削除した場合でも、ファイルは myhardlink を介してアクセスできます。ここで、ls コマンドのリンク数が重要になります。リンク数は i ノードが持つハードリンクの数であり、ファイルを削除するとリンク数が減少します。i ノードは、i ノードへのすべてのハードリンクが削除されたときにのみ削除されます。ファイルを作成すると、そのリンク数は 1 になります。それは、その i ノードを指す唯一のファイルであるためです。シンボリックリンクとは異なり、ハードリンクはファイルシステムに固有のため、ファイルシステムをまたがることはできません。\n\n<b>シンボリックリンクの作成</b>\n\n<pre>\n$ ln -s myfile mylink</pre>\n\nシンボリックリンクを作成するには、ln コマンドを使用し、-s オプションでシンボリックを指定し、対象ファイルとリンク名を指定します。\n\n<b>ハードリンクの作成</b>\n\n<pre>\n$ ln somefile somelink</pre>\n\nシンボリックリンクの作成と同様ですが、今回は -s を省略します。",
  "exercise": "シンボリックリンクとハードリンクを作成し、いくつか削除して結果を確認してみてください。",
  "quizQuestion": "シンボリックリンクを作成するために使用されるコマンドは何ですか？",
  "quizAnswer": "ln -s",
  "slug": "symlinks"
}