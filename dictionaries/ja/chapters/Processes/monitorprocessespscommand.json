{
  "id": 1,
  "title": "ps (プロセス)",
  "lessonContent": "プロセスは、マシン上で実行されているプログラムです。これらはカーネルによって管理され、各プロセスには<b>プロセスID（PID）</b>と呼ばれる関連付けられたIDがあります。このPIDは、プロセスが作成された順に割り当てられます。\n\n続けて、実行中のプロセスのリストを表示するためにpsコマンドを実行してください:\n\n<pre>$ ps\n\nPID        TTY     STAT   TIME          CMD\n41230    pts/4    Ss        00:00:00     bash\n51224    pts/4    R+        00:00:00     ps\n</pre>\n\nこれにより、現在のプロセスのクイックスナップショットが表示されます:\n\n<ul>\n<li>PID: プロセスID</li>\n<li>TTY: プロセスに関連付けられたコントロール端末（後で詳細に説明します）</li>\n<li>STAT: プロセスの状態コード</li>\n<li>TIME: 累計CPU使用時間</li>\n<li>CMD: 実行可能ファイル/コマンドの名前</li>\n</ul>\n\npsのmanページを見ると、渡すことができる多くのコマンドオプションがあることがわかります。使用するオプションによって異なります - BSD、GNU、またはUnix。個人的にはBSDスタイルがより一般的だと考えていますので、それを選択します。スタイルの違いは使用するダッシュの量とフラグです。\n\n<pre>$ ps aux</pre>\n\n<b>a</b>は、他のユーザーによって実行されているプロセスを含むすべての実行中のプロセスを表示します。 <b>u</b>はプロセスに関する詳細情報を表示します。そして最後に、<b>x</b>はTTYが関連付けられていないすべてのプロセスをリストアップします。これらのプログラムはTTYフィールドに?が表示され、システム起動時に一緒に起動するデーモンプロセスで一般的です。\n\n今、多くのフィールドが表示されることに気づくかもしれませんが、すべてを覚える必要はありません。高度なプロセスに関する後のコースでは、これらのいくつかについて再度説明します:\n\n<ul>\n<li>USER: 有効なユーザー（アクセス権を使用しているユーザー）</li>\n<li>PID: プロセスID</li>\n<li>%CPU: プロセスが実行されてからのCPU時間の使用率</li>\n<li>%MEM: プロセスの常駐セットサイズをマシン上の物理メモリに対する比率</li>\n<li>VSZ: プロセス全体の仮想メモリ使用量</li>\n<li>RSS: 常駐セットサイズ、タスクが使用したスワップされていない物理メモリ</li>\n<li>TTY: プロセスに関連付けられたコントロール端末</li>\n<li>STAT: プロセスの状態コード</li>\n<li>START: プロセスの開始時間</li>\n<li>TIME: 累計CPU使用時間</li>\n<li>COMMAND: 実行可能ファイル/コマンドの名前</li>\n</ul>\n\npsコマンドは見るのが少し複雑になることがあります。今のところ、最もよく見るフィールドはPID、STAT、COMMANDです。\n\nもう1つ非常に便利なコマンドは<b>top</b>コマンドです。topはスナップショットではなく、システム上で実行中のプロセスについてリアルタイムの情報を提供します。デフォルトでは、10秒ごとにリフレッシュされます。Topは、リソースを多く消費しているプロセスを確認するための非常に便利なツールです。\n\n<pre>$ top</pre>",
  "exercise": "異なるフラグを使用してpsコマンドを使用し、出力がどのように変わるかを確認してください。",
  "quizQuestion": "プロセスに関する詳細情報を表示するために使用されるpsフラグは何ですか？",
  "quizAnswer": "u",
  "slug": "monitorprocessespscommand"
}