{
  "id": 5,
  "title": "env (Environment)",
  "lessonContent": "以下のコマンドを実行してください：\n\n<pre>$ echo $HOME</pre>\n\nホームディレクトリへのパスが表示されるはずです。私の場合は/home/peteのように見えます。\n\nこのコマンドはどうでしょうか？\n\n<pre>$ echo $USER </pre>\n\nユーザー名が表示されるはずです！\n\nこの情報はどこから来ているのでしょうか？環境変数から来ています。次のように入力することでこれらを表示できます\n\n<pre>$ env </pre>\n\nこれにより、現在設定されている環境変数に関する多くの情報が出力されます。これらの変数には、シェルや他のプロセスが使用できる便利な情報が含まれています。\n\n以下に短い例を示します：\n\n<pre>\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/bin\nPWD=/home/user\nUSER=pete\n</pre>\n\n\n特に重要な変数の1つはPATH変数です。これらの変数には、次のように変数名の前に$を付けてアクセスできます：\n\n<pre>\n$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/bin\n</pre>\n\nこれにより、システムがコマンドを実行する際に検索するパスがコロンで区切られたリストが返されます。インターネットからパッケージを手動でダウンロードしてインストールし、標準ではないディレクトリに配置し、そのコマンドを実行したい場合を考えてみましょう。$ coolcommandと入力し、プロンプトがコマンドが見つかりませんと表示されたら、それはおかしいです。そのフォルダーにバイナリがあることを確認しているのに、エラーが発生しています。これは、$PATH変数がそのバイナリを検索しないためです。 \n\nそのディレクトリから実行したいバイナリがたくさんある場合、PATH変数を変更してそのディレクトリをPATH環境変数に含めるだけで、そのディレクトリから実行できます。",
  "exercise": "以下の出力は何を示していますか？なぜですか？\n<pre>$ echo $HOME</pre>",
  "quizQuestion": "環境変数をどのように表示しますか？",
  "quizAnswer": "env",
  "slug": "envenvironment"
}