{
  "id": 5,
  "title": "Setuid",
  "lessonContent": "通常のユーザーが作業を行う際に昇格アクセスが必要なケースが多くあります。システム管理者が保護されたファイルにアクセスが必要なたびに root パスワードを入力するわけにはいかないので、このような振る舞いを許可する特別なファイルパーミッションビットがあります。Set User ID（SUID）は、ユーザーが自分自身ではなくプログラムファイルの所有者としてプログラムを実行できるようにします。\n\n例を見てみましょう：\n\nたとえば、パスワードを変更したいとします。簡単ですよね？ passwd コマンドを使用するだけです：\n\n<pre>$ passwd</pre>\n\nパスワードコマンドは何をしているのでしょうか？ いくつかのファイルを変更していますが、最も重要なのは /etc/shadow ファイルを変更していることです。そのファイルを見てみましょう：\n\n<pre>$ ls -l /etc/shadow\n\n-rw-r----- 1 root shadow 1134 Dec 1 11:45 /etc/shadow\n</pre>\n\nちょっと待ってください、このファイルは root が所有していますか？ root が所有するファイルをどのように変更できるのでしょうか？\n\n実行したコマンドの別のパーミッションセットを見てみましょう：\n\n<pre>$ ls -l /usr/bin/passwd\n\n-rwsr-xr-x 1 root root 47032 Dec 1 11:45 /usr/bin/passwd\n</pre>\n\nここで新しいパーミッションビット <b>s</b> が見られます。このパーミッションビットは SUID で、ファイルにこのパーミッションが設定されていると、プログラムを起動したユーザーはファイル所有者の権限と実行権限（この場合は root）を取得できます。つまり、ユーザーがパスワードコマンドを実行している間、root として実行されているということです。\n\nこれが passwd コマンドを実行すると /etc/shadow のような保護されたファイルにアクセスできる理由です。もしもそのビットを削除すると、/etc/shadow を変更してパスワードを変更することができなくなることがわかります。\n\n<b>SUID の変更</b>\n\n通常のパーミッションと同様に、SUID パーミッションを変更する方法は2つあります。\n\n<i>シンボリックな方法：</i>\n<pre>$ sudo chmod u+s myfile</pre>\n\n<i>数値的な方法：</i>\n<pre> sudo chmod 4755 myfile</pre>\n\nSUID は 4 で表され、パーミッションセットの前に付加されます。SUID は大文字の <b>S</b> で表されることもありますが、これは同じ機能を持っていますが、実行権限はありません。",
  "exercise": "/etc/passwd のパーミッションを詳しく見て、他に気づく点はありますか？ SUID が有効になっているファイルは簡単に見分けることができます。",
  "quizQuestion": "SUID を表す数値は何ですか？",
  "quizAnswer": "4",
  "slug": "setuidsetuserid"
}