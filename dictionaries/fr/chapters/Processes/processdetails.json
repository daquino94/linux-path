{
  "id": 3,
  "title": "Détails du processus",
  "lessonContent": "Avant d'aborder des applications plus pratiques des processus, nous devons d'abord comprendre ce qu'ils sont et comment ils fonctionnent. Cette partie peut être déroutante car nous entrons dans les détails techniques, n'hésitez donc pas à revenir sur cette leçon si vous ne souhaitez pas en apprendre davantage pour le moment. \n\nUn processus, comme nous l'avons dit précédemment, est un programme en cours d'exécution sur le système, plus précisément c'est le système qui alloue de la mémoire, du CPU, des E/S pour faire fonctionner le programme. Un processus est une instance d'un programme en cours d'exécution, ouvrez donc 3 fenêtres de terminal, dans deux fenêtres, exécutez la commande <b>cat</b> sans passer d'options (le processus cat restera ouvert en tant que processus car il attend stdin). Maintenant, dans la troisième fenêtre, exécutez : <b>ps aux | grep cat</b>. Vous verrez qu'il y a deux processus pour cat, même s'ils appellent le même programme.\n\nLe noyau est responsable des processus, lorsque nous exécutons un programme, le noyau charge le code du programme en mémoire, détermine et alloue des ressources, puis surveille chaque processus, il sait : \n\n<ul>\n<li>L'état du processus</li>\n<li>Les ressources utilisées et reçues par le processus</li>\n<li>Le propriétaire du processus</li>\n<li>La gestion des signaux (nous en parlerons plus tard)</li>\n<li>Et fondamentalement tout le reste</li>\n</ul>\n\nTous les processus essaient de profiter de cette douce part de ressources, c'est le rôle du noyau de s'assurer que les processus reçoivent la bonne quantité de ressources en fonction de leurs besoins. Lorsqu'un processus se termine, les ressources qu'il a utilisées sont libérées pour d'autres processus.",
  "exercise": "Aucun exercice pour cette leçon.",
  "quizQuestion": "Quel élément gère et contrôle les processus ?",
  "quizAnswer": "noyau",
  "slug": "detailsduprocessus"
}