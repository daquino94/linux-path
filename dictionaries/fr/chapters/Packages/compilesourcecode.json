{
  "id": 7,
  "title": "Compiler le code source",
  "lessonContent": "Souvent, vous rencontrerez un package obscur qui n'est disponible que sous forme de code source pur. Vous devrez utiliser quelques commandes pour compiler et installer ce package de code source sur votre système. \n\nTout d'abord, vous devrez avoir le logiciel pour installer les outils qui vous permettront de compiler le code source. \n\n<pre>$ sudo apt install build-essential</pre>\n\nUne fois cela fait, extrayez le contenu du fichier du package, très probablement un fichier .tar.gz. \n\n<pre>$ tar -xzvf package.tar.gz</pre>\n\nAvant de faire quoi que ce soit, consultez le fichier README ou INSTALL à l'intérieur du package. Parfois, il y aura des instructions d'installation spécifiques. \n\nEn fonction de la méthode de compilation utilisée par le développeur, vous devrez utiliser différentes commandes, telles que cmake ou autre chose.\n\nCependant, le plus souvent, vous verrez une compilation de base avec make, donc nous en discuterons :\n\nÀ l'intérieur du contenu du package se trouvera un script de configuration, ce script vérifie les dépendances sur votre système et s'il vous manque quelque chose, vous verrez une erreur et vous devrez corriger ces dépendances. \n\n<pre>$ ./configure</pre>\n\nLe <b>./</b> vous permet d'exécuter un script dans le répertoire actuel. \n\n<pre>$ make</pre>\n\nÀ l'intérieur du contenu du package, il y a un fichier appelé Makefile qui contient les règles de construction du logiciel. Lorsque vous exécutez la commande make, elle examine ce fichier pour construire le logiciel.\n\n<pre>$ sudo make install</pre>\n\nCette commande installe réellement le package, elle copiera les fichiers corrects aux emplacements corrects sur votre ordinateur.\n\nSi vous souhaitez désinstaller le package, utilisez :\n\n<pre>$ sudo make uninstall</pre>\n\nSoyez prudent lorsque vous utilisez make install, vous pourriez ne pas réaliser tout ce qui se passe en arrière-plan. Si vous décidez de supprimer ce package, vous pourriez ne pas réellement tout supprimer car vous n'avez pas réalisé ce qui a été ajouté à votre système. Oubliez tout ce que je viens de vous expliquer à propos de make install et utilisez plutôt la commande <b>checkinstall</b>. Cette commande créera un fichier .deb pour vous que vous pourrez facilement installer et désinstaller. \n\n<pre>$ sudo checkinstall</pre> \n\nCette commande va essentiellement \"make install\" et construire un package .deb et l'installer. Cela rendra plus facile la suppression du package plus tard.",
  "exercise": "Trouvez un programme en code source (à partir d'un site de confiance) et installez-le à partir de la source.",
  "quizQuestion": "Que devriez-vous utiliser toujours à la place de make install ?",
  "quizAnswer": "checkinstall",
  "slug": "compilerlecodesource"
}