{
  "id": 7,
  "title": "Permissions de processus",
  "lessonContent": "Passons un peu aux permissions de processus, souvenez-vous quand je vous ai dit que lorsque vous exécutez la commande passwd avec le bit de permission SUID activé, vous exécutez le programme en tant que root ? C'est vrai, mais est-ce que cela signifie que puisque vous êtes temporairement root, vous pouvez modifier les mots de passe des autres utilisateurs ? Non, heureusement non !\n\nCela est dû aux nombreux UIDs que Linux implémente. Il y a trois UIDs associés à chaque processus :\n\nLorsque vous lancez un processus, il s'exécute avec les mêmes permissions que l'utilisateur ou le groupe qui l'a lancé, c'est ce qu'on appelle un <b>identifiant d'utilisateur effectif</b>. Cet UID est utilisé pour accorder des droits d'accès à un processus. Donc naturellement, si Bob a lancé la commande touch, le processus s'exécuterait comme lui et tous les fichiers qu'il crée seraient sous sa propriété.\n\nIl y a un autre UID, appelé <b>identifiant d'utilisateur réel</b>, qui est l'ID de l'utilisateur qui a lancé le processus. Ceux-ci sont utilisés pour retrouver l'utilisateur qui a lancé le processus.\n\nUn dernier UID est l'<b>identifiant d'utilisateur sauvegardé</b>, qui permet à un processus de basculer entre l'UID effectif et l'UID réel, vice versa. C'est utile car nous ne voulons pas que notre processus s'exécute avec des privilèges élevés tout le temps, il est juste bon de les utiliser à des moments spécifiques.\n\nMaintenant, mettons tout cela ensemble en regardant à nouveau la commande passwd.\n\nLorsque vous exécutez la commande passwd, votre UID effectif est votre ID utilisateur, disons que c'est 500 pour l'instant. Oh, mais attendez, rappelez-vous que la commande passwd a la permission SUID activée. Donc lorsque vous l'exécutez, votre UID effectif est maintenant 0 (0 est l'UID de root). Maintenant ce programme peut accéder aux fichiers en tant que root.\n\nDisons que vous avez un petit goût du pouvoir et que vous voulez modifier le mot de passe de Sally, Sally a un UID de 600. Eh bien, vous serez malchanceux, heureusement le processus a également votre UID réel dans ce cas 500. Il sait que votre UID est 500 et donc vous ne pouvez pas modifier le mot de passe de l'UID 600. (Cela est bien sûr contourné si vous êtes un superutilisateur sur une machine et que vous pouvez tout contrôler et changer).\n\nDepuis que vous avez exécuté passwd, il démarrera le processus en utilisant votre UID réel, et il sauvegardera l'UID du propriétaire du fichier (UID effectif), vous pouvez donc basculer entre les deux. Pas besoin de modifier tous les fichiers avec un accès root s'il n'est pas nécessaire.\n\nLa plupart du temps, l'UID réel et l'UID effectif sont les mêmes, mais dans des cas tels que la commande passwd, ils changeront.",
  "exercise": "Nous n'avons pas encore discuté des processus, nous pouvons quand même jeter un œil à ce changement en temps réel : \n\n<ol>\n<li>Ouvrez une première fenêtre de terminal et exécutez la commande : <b>watch -n 1 \"ps aux | grep passwd\"</b>. Cela surveillera le processus passwd.</li>\n<li>Ouvrez une deuxième fenêtre de terminal et exécutez : <b>passwd</b></li>\n<li>Regardez la première fenêtre de terminal, vous verrez un processus apparaître pour passwd. La première colonne dans le tableau des processus est l'identifiant d'utilisateur effectif, et c'est l'utilisateur root !</li>\n</ol>",
  "quizQuestion": "Quel UID décide des accès à accorder ?",
  "quizAnswer": "effectif",
  "slug": "permissionsdeprocessus"
}