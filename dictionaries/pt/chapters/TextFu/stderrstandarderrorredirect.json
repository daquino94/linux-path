{
  "id": 3,
  "title": "stderr (Erro Padrão)",
  "lessonContent": "Vamos tentar algo um pouco diferente agora, vamos tentar listar o conteúdo de um diretório que não existe no seu sistema e redirecionar a saída para o arquivo peanuts.txt novamente.\n\n<pre>$ ls /fake/directory > peanuts.txt </pre>\n\nO que você deve ver é: \n\n<pre>ls: cannot access /fake/directory: No such file or directory</pre>\n\nAgora você provavelmente está pensando, essa mensagem não deveria ter sido enviada para o arquivo? Na verdade, há outro fluxo de E/S em jogo aqui chamado erro padrão (stderr). Por padrão, stderr envia sua saída também para a tela, é um fluxo completamente diferente do stdout. Portanto, você precisará redirecionar sua saída de forma diferente. \n\nInfelizmente, o redirecionador não é tão simples quanto usar <b>&lt;</b> ou <b>&gt;</b>, mas é bem próximo. Teremos que usar descritores de arquivo. Um descritor de arquivo é um número não negativo usado para acessar um arquivo ou fluxo. Vamos aprofundar sobre isso mais tarde, mas por enquanto saiba que o descritor de arquivo para stdin, stdout e stderr é 0, 1 e 2, respectivamente. \n\nAgora, se quisermos redirecionar nosso stderr para o arquivo, podemos fazer isso: \n\n<pre>$ ls /fake/directory 2> peanuts.txt</pre>\n\nVocê deve ver apenas as mensagens de stderr em peanuts.txt. \n\nE se eu quisesse ver tanto stderr quanto stdout no arquivo peanuts.txt? É possível fazer isso também com descritores de arquivo: \n\n<pre>$ ls /fake/directory > peanuts.txt 2>&1</pre>\n\nIsso envia os resultados de ls /fake/directory para o arquivo peanuts.txt e depois redireciona stderr para stdout via 2>&1. A ordem das operações aqui importa, 2>&1 envia stderr para onde stdout está apontando. Neste caso, stdout está apontando para um arquivo, então 2>&1 também envia stderr para um arquivo. Portanto, se você abrir o arquivo peanuts.txt, deverá ver tanto stderr quanto stdout. No nosso caso, o comando acima só produz stderr.\n\nHá uma maneira mais curta de redirecionar tanto stdout quanto stderr para um arquivo:\n\n<pre>$ ls /fake/directory &> peanuts.txt</pre>\n\nE se eu não quiser nada disso e quiser me livrar completamente das mensagens de stderr? Bem, você também pode redirecionar a saída para um arquivo especial chamado /dev/null e ele descartará qualquer entrada.\n\n<pre>$ ls /fake/directory 2> /dev/null</pre>",
  "exercise": "O que o seguinte comando está fazendo? \n\n<pre>$ ls /fake/directory >> /dev/null 2>&1</pre>",
  "quizQuestion": "Qual é o redirecionador para stderr?",
  "quizAnswer": "2>",
  "slug": "stderrstandarderrorredirect"
}