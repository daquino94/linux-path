{
  "id": 4,
  "title": "Criação de Processos",
  "lessonContent": "Novamente, esta lição e a próxima são puramente informativas para que você possa ver o que está por trás, sinta-se à vontade para voltar a este conteúdo depois de ter trabalhado um pouco mais com processos.\n\nQuando um novo processo é criado, um processo existente basicamente se clona usando algo chamado de chamada de sistema fork (chamadas de sistema serão discutidas muito no futuro). A chamada de sistema fork cria um processo filho quase idêntico, este processo filho recebe um novo ID de processo (PID) e o processo original se torna seu processo pai e tem algo chamado de ID de processo pai <b>PPID</b>. Em seguida, o processo filho pode continuar a usar o mesmo programa que seu pai estava usando antes ou, mais frequentemente, usar a chamada de sistema execve para iniciar um novo programa. Esta chamada de sistema destrói a gerência de memória que o kernel estabeleceu para esse processo e configura novas para o novo programa. \n\nPodemos ver isso em ação:\n\n<pre>$ ps l</pre>\n\nA opção l nos dá um formato \"longo\" ou uma visão ainda mais detalhada de nossos processos em execução. Você verá uma coluna rotulada <b>PPID</b>, que é o ID do pai. Agora, olhe para o seu terminal, você verá um processo em execução que é o seu shell, então no meu sistema eu tenho um processo em execução do bash. Agora, lembre-se de quando você executou o comando ps l, você o executou a partir do processo que estava executando o bash. Agora você verá que o <b>PID</b> do shell bash é o <b>PPID</b> do comando <b>ps l</b>.\n\nEntão, se todo processo precisa ter um pai e eles são apenas bifurcações uns dos outros, deve haver uma mãe de todos os processos, certo? Você está correto, quando o sistema é inicializado, o kernel cria um processo chamado <b>init</b>, que tem um PID de 1. O processo init não pode ser encerrado a menos que o sistema seja desligado. Ele é executado com privilégios de root e executa muitos processos que mantêm o sistema em funcionamento. Vamos dar uma olhada mais de perto no init no curso de inicialização do sistema, por enquanto saiba que é o processo que gera todos os outros processos.",
  "exercise": "Dê uma olhada nos seus processos em execução, você consegue ver quais outros processos têm pais?",
  "quizQuestion": "Qual chamada de sistema cria um novo processo?",
  "quizAnswer": "fork",
  "slug": "criacaodeprocessos"
}