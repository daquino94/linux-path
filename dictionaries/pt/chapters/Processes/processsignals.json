{
  "id": 6,
  "title": "Sinais",
  "lessonContent": "Um sinal é uma notificação para um processo de que algo aconteceu.\n\n<b>Por que temos sinais</b>\n\nEles são interrupções de software e têm muitos usos:\n\n<ul>\n<li>Um usuário pode digitar um dos caracteres especiais do terminal (Ctrl-C) ou (Ctrl-Z) para matar, interromper ou suspender processos</li>\n<li>Problemas de hardware podem ocorrer e o kernel quer notificar o processo</li>\n<li>Problemas de software podem ocorrer e o kernel quer notificar o processo</li>\n<li>Basicamente, são formas de comunicação entre processos</li>\n</ul>\n\n<b>Processo de sinal</b>\n\nQuando um sinal é gerado por algum evento, ele é então entregue a um processo, sendo considerado em estado pendente até ser entregue. Quando o processo é executado, o sinal será entregue. No entanto, os processos têm máscaras de sinal e podem definir o bloqueio da entrega do sinal, se especificado. Quando um sinal é entregue, um processo pode fazer uma série de coisas: \n\n<ul>\n<li>Ignorar o sinal</li>\n<li>\"Capturar\" o sinal e executar uma rotina de tratamento específica</li>\n<li>O processo pode ser terminado, ao contrário da chamada de sistema de saída normal</li>\n<li>Bloquear o sinal, dependendo da máscara de sinal</li>\n</ul>\n\n<b>Sinais comuns</b>\n\nCada sinal é definido por inteiros com nomes simbólicos que estão na forma de SIGxxx. Alguns dos sinais mais comuns são: \n\n<ul>\n<li>SIGHUP ou HUP ou 1: Desconexão</li>\n<li>SIGINT ou INT ou 2: Interrupção</li>\n<li>SIGKILL ou KILL ou 9: Matar</li>\n<li>SIGSEGV ou SEGV ou 11: Falha de segmentação</li>\n<li>SIGTERM ou TERM ou 15: Término de software</li>\n<li>SIGSTOP ou STOP: Parar</li>\n</ul>\n\nOs números podem variar com os sinais, então geralmente são referidos por seus nomes.\n\nAlguns sinais são inbloqueáveis, um exemplo é o sinal SIGKILL. O sinal KILL destrói o processo.",
  "exercise": "Não há exercícios para esta lição.",
  "quizQuestion": "Qual sinal é inbloqueável?",
  "quizAnswer": "SIGKILL",
  "slug": "sinaisdeprocesso"
}