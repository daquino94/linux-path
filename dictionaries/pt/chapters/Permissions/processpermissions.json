{
  "id": 7,
  "title": "Permissões de Processo",
  "lessonContent": "Vamos falar um pouco sobre permissões de processo, lembra quando eu disse que ao executar o comando passwd com o bit de permissão SUID ativado você executará o programa como root? Isso é verdade, porém isso significa que, sendo temporariamente root, você pode modificar as senhas de outros usuários? Não, felizmente não!\n\nIsso ocorre devido aos muitos UIDs que o Linux implementa. Existem três UIDs associados a cada processo:\n\nQuando você inicia um processo, ele é executado com as mesmas permissões do usuário ou grupo que o iniciou, isso é conhecido como um <b>ID de usuário efetivo</b>. Esse UID é usado para conceder direitos de acesso a um processo. Naturalmente, se Bob executar o comando touch, o processo será executado como ele e quaisquer arquivos que ele criar serão de sua propriedade.\n\nExiste outro UID, chamado <b>ID de usuário real</b>, que é o ID do usuário que iniciou o processo. Eles são usados para rastrear quem é o usuário que iniciou o processo.\n\nUm último UID é o <b>ID de usuário salvo</b>, que permite a um processo alternar entre o UID efetivo e o UID real, vice-versa. Isso é útil porque não queremos que nosso processo seja executado com privilégios elevados o tempo todo, é apenas uma boa prática usar privilégios especiais em momentos específicos. \n\nAgora vamos juntar tudo isso olhando para o comando passwd mais uma vez. \n\nAo executar o comando passwd, seu UID efetivo é o seu ID de usuário, digamos que seja 500 por enquanto. Ah, mas espere, lembra que o comando passwd tem a permissão SUID ativada. Então, quando você o executa, seu UID efetivo agora é 0 (0 é o UID do root). Agora este programa pode acessar arquivos como root.\n\nDigamos que você tenha um pequeno gostinho de poder e queira modificar a senha de Sally, Sally tem um UID de 600. Bem, você terá azar, felizmente o processo também tem seu UID real neste caso 500. Ele sabe que seu UID é 500 e, portanto, você não pode modificar a senha do UID 600. (Isso, é claro, é sempre contornado se você for um superusuário em uma máquina e puder controlar e alterar tudo).\n\nComo você executou o passwd, ele iniciará o processo usando seu UID real e salvará o UID do proprietário do arquivo (UID efetivo), para que você possa alternar entre os dois. Não é necessário modificar todos os arquivos com acesso root se não for necessário. \n\nNa maioria das vezes, o UID real e o UID efetivo são iguais, mas em casos como o comando passwd eles mudarão.",
  "exercise": "Ainda não discutimos processos, mas ainda podemos ver essa mudança acontecendo em tempo real: \n\n<ol>\n<li>Abra uma janela do terminal e execute o comando: <b>watch -n 1 \"ps aux | grep passwd\"</b>. Isso irá monitorar o processo passwd.</li>\n<li>Abra uma segunda janela do terminal e execute: <b>passwd</b></li>\n<li>Olhe para a primeira janela do terminal, você verá um processo aparecer para passwd. A primeira coluna na tabela de processos é o ID de usuário efetivo, e eis que é o usuário root!</li>\n</ol>",
  "quizQuestion": "Qual UID decide que acesso conceder?",
  "quizAnswer": "efetivo",
  "slug": "permissõesdeprocesso"
}