{
  "id": 5,
  "title": "env (Окружение)",
  "lessonContent": "Запустите следующую команду: \n\n<pre>$ echo $HOME</pre>\n\nВы должны увидеть путь к вашему домашнему каталогу, мой выглядит как /home/pete. \n\nЧто насчет этой команды? \n\n<pre>$ echo $USER </pre>\n\nВы должны увидеть свое имя пользователя!\n\nОткуда берется эта информация? Она берется из ваших переменных окружения. Вы можете просмотреть их, набрав\n\n<pre>$ env </pre>\n\nЭто выводит множество информации о переменных окружения, которые у вас в настоящее время установлены. Эти переменные содержат полезную информацию, которую оболочка и другие процессы могут использовать.\n\nВот небольшой пример:\n\n<pre>\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/bin\nPWD=/home/user\nUSER=pete\n</pre>\n\n\nОдной из особенно важных переменных является переменная PATH. Вы можете получить доступ к этим переменным, добавив $ перед именем переменной, например так:\n\n<pre>\n$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/bin\n</pre>\n\nЭто возвращает список путей, разделенных двоеточием, по которым ваша система ищет при запуске команды. Допустим, вы вручную загрузили и установили пакет из интернета и поместили его в нестандартный каталог, и хотите запустить эту команду, вы вводите $ coolcommand и приглашение говорит, что команда не найдена. Ну, это глупо, вы смотрите на бинарный файл в папке и знаете, что он существует. Происходит то, что переменная $PATH не проверяет этот каталог на наличие этого бинарного файла, поэтому возникает ошибка. \n\nПредположим, у вас есть множество бинарных файлов, которые вы хотите запустить из этого каталога, вы можете просто изменить переменную PATH, чтобы включить этот каталог в вашу переменную окружения PATH.",
  "exercise": "Что выведет следующая команда? Почему?\n<pre>$ echo $HOME</pre>",
  "quizQuestion": "Как вы просматриваете свои переменные окружения?",
  "quizAnswer": "env",
  "slug": "envenvironment"
}