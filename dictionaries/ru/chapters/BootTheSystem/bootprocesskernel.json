{
  "id": 4,
  "title": "Процесс загрузки: Ядро",
  "lessonContent": "Итак, теперь, когда наш загрузчик передал необходимые параметры, давайте посмотрим, как он запускается:\n\n<b>Initrd против Initramfs</b>\n\nЕсть некоторая проблема типа курица-и-яйцо, когда мы говорим о загрузке ядра. Ядро управляет аппаратными средствами нашей системы, однако не все драйверы доступны ядру во время загрузки. Поэтому мы зависим от временной корневой файловой системы, которая содержит только необходимые модули, которые ядру нужны для доступа к остальному оборудованию. В старых версиях Linux эту задачу выполнял initrd (initial ram disk). Ядро монтировало initrd, получал необходимые драйверы для загрузки, а затем, когда загрузило все необходимое, заменяло initrd на фактическую корневую файловую систему. В наши дни у нас есть так называемый initramfs, это временная корневая файловая система, встроенная непосредственно в само ядро для загрузки всех необходимых драйверов для реальной корневой файловой системы, так что больше нет необходимости в поиске файла initrd. \n\n<b>Монтирование корневой файловой системы</b>\n\nТеперь у ядра есть все модули, необходимые для создания устройства корня и монтирования корневого раздела. Прежде чем продолжить, корневой раздел фактически смонтирован сначала в режиме только для чтения, чтобы fsck мог работать безопасно и проверить целостность системы. После этого корневая файловая система повторно монтируется в режиме чтения и записи. Затем ядро находит программу init и запускает ее.",
  "exercise": "Урок без упражнений.",
  "quizQuestion": "Что используется в современных системах для загрузки временной корневой файловой системы?",
  "quizAnswer": "initramfs",
  "slug": "bootprocesskernel"
}