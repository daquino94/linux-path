{
  "id": 3,
  "title": "Детали процесса",
  "lessonContent": "Прежде чем мы перейдем к более практическим применениям процессов, нам нужно понять, что они такое и как они работают. Эта часть может быть запутанной, поскольку мы погружаемся в детали, так что не стесняйтесь вернуться к этому уроку, если сейчас не хотите об этом узнавать. \n\nПроцесс, как мы уже говорили, - это запущенная программа в системе, точнее, это система выделяет память, ЦПУ, ввод-вывод для запуска программы. Процесс - это экземпляр запущенной программы, откройте три терминальных окна, в двух окнах выполните команду <b>cat</b> без передачи каких-либо параметров (процесс cat останется открытым как процесс, потому что он ожидает ввода с клавиатуры). Теперь в третьем окне выполните: <b>ps aux | grep cat</b>. Вы увидите, что есть два процесса для cat, даже если они вызывают одну и ту же программу.\n\nЯдро отвечает за процессы, когда мы запускаем программу, ядро загружает код программы в память, определяет и выделяет ресурсы, а затем следит за каждым процессом, оно знает: \n\n<ul>\n<li>Статус процесса</li>\n<li>Ресурсы, которые процесс использует и получает</li>\n<li>Владелец процесса</li>\n<li>Обработка сигналов (подробнее об этом позже)</li>\n<li>И в общем все остальное</li>\n</ul>\n\nВсе процессы пытаются добраться до этого сладкого пирога ресурсов, задача ядра - убедиться, что процессы получают правильное количество ресурсов в зависимости от требований процесса. Когда процесс завершается, используемые им ресурсы освобождаются для других процессов.",
  "exercise": "Урок не содержит упражнений.",
  "quizQuestion": "Что управляет и контролирует процессы?",
  "quizAnswer": "ядро",
  "slug": "processdetails"
}