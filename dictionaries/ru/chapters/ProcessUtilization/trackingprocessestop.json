{
  "id": 1,
  "title": "Отслеживание процессов: top",
  "lessonContent": "В этом курсе мы рассмотрим, как читать и анализировать использование ресурсов на вашей системе, эта урок показывает некоторые отличные инструменты, которые можно использовать, когда вам нужно отследить, что делает процесс. \n\n<b>top</b>\n\nМы уже обсуждали top ранее, но сейчас мы углубимся в детали того, что он фактически отображает. Помните, что top - это инструмент, который мы использовали для получения реального времени использования системы нашими процессами:\n\n<pre>\ntop - 18:06:26 up 6 days,  4:07,  2 users,  load average: 0.92, 0.62, 0.59\nTasks: 389 total,   1 running, 387 sleeping,   0 stopped,   1 zombie\n%Cpu(s):  1.8 us,  0.4 sy,  0.0 ni, 97.6 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem:  32870888 total, 27467976 used,  5402912 free,   518808 buffers\nKiB Swap: 33480700 total,    39892 used, 33440808 free. 19454152 cached Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                             \n 6675 patty    20   0 1731472 520960  30876 S   8.3  1.6 160:24.79 chrome                             \n 6926 patty    20   0  935888 163456  25576 S   4.3  0.5   5:28.13 chrome \n</pre>\n\nДавайте разберем, что означает этот вывод, вам не нужно запоминать это, но вернитесь к этому, когда вам понадобится справка.\n\n<b>1-я строка: Это та же информация, которую вы увидели бы, если бы выполнили команду uptime (больше информации будет далее)</b>\n\nПоля идут слева направо:\n<ol>\n<li>Текущее время</li>\n<li>Как долго система работает</li>\n<li>Сколько пользователей в настоящее время вошло в систему</li>\n<li>Средняя загрузка системы (больше информации будет далее)</li>\n</ol>\n\n<b>2-я строка: Задачи, которые выполняются, спят, остановлены и зомбированы</b>\n\n<b>3-я строка: Информация о процессоре</b>\n\n<ol>\n<li>us: время использования процессора - процент времени процессора, затраченного на выполнение процессов пользователей, которые не являются nice</li>\n<li>sy: время использования системы процессора - процент времени процессора, затраченного на выполнение ядра и процессов ядра</li>\n<li>ni: время использования процессора nice - процент времени процессора, затраченного на выполнение процессов nice</li>\n<li>id: простой процессора - процент времени процессора, затраченного на простой</li>\n<li>wa: ожидание ввода-вывода - процент времени процессора, затраченного на ожидание ввода-вывода. Если это значение низкое, проблема, вероятно, не ввод-вывод диска или сети</li> \n<li>hi: аппаратные прерывания - процент времени процессора, затраченного на обслуживание аппаратных прерываний</li>\n<li>si: программные прерывания - процент времени процессора, затраченного на обслуживание программных прерываний</li>\n<li>st: время украденного процессора - если вы запускаете виртуальные машины, это процент времени процессора, который был украден у вас для других задач</li>\n</ol>\n\n<b>4-я и 5-я строка: Использование памяти и использование подкачки</b>\n\n<b>Список процессов, которые в настоящее время используются</b>\n\n<ol>\n<li>PID: Идентификатор процесса</li>\n<li>USER: пользователь, владелец процесса</li>\n<li>PR: Приоритет процесса</li>\n<li>NI: Значение nice</li>\n<li>VIRT: Виртуальная память, используемая процессом</li>\n<li>RES: Физическая память, используемая процессом</li>\n<li>SHR: Общая память процесса</li>\n<li>S: Указывает статус процесса: S=спящий, R=работающий, Z=зомби, D=непрерываемый, T=остановленный</li>\n<li>%CPU - это процент использования ЦП этим процессом</li>\n<li>%MEM - процент использования ОЗУ этим процессом</li>\n<li>TIME+ - общее время активности этого процесса</li>\n<li>COMMAND - имя процесса</li>\n</ol>\n\nВы также можете указать идентификатор процесса, если вы хотите отслеживать определенные процессы:\n\n<pre>$ top -p 1</pre>",
  "exercise": "Поиграйтесь с командой top и посмотрите, какие процессы используют больше всего ресурсов.",
  "quizQuestion": "Какая команда отображает ту же информацию, что и первая строка в top?",
  "quizAnswer": "uptime",
  "slug": "trackingprocessestop"
}