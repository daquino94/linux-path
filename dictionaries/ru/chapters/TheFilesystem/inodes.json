{
  "id": 11,
  "title": "Inodes",
  "lessonContent": "Помните, что наша файловая система состоит из всех наших фактических файлов и базы данных, которая управляет этими файлами? База данных известна как таблица индексных узлов.\n\n<b>Что такое индексный узел?</b>\n\nИндексный узел (inode) - это запись в этой таблице, и для каждого файла есть свой индексный узел. Он описывает все о файле, такие как:\n\n<ul>\n<li>Тип файла - обычный файл, каталог, символьное устройство и т. д.</li>\n<li>Владелец</li>\n<li>Группа</li>\n<li>Права доступа</li>\n<li>Временные метки - mtime (время последнего изменения файла), ctime (время последнего изменения атрибута), atime (время последнего доступа)</li>\n<li>Количество жестких ссылок на файл</li>\n<li>Размер файла</li>\n<li>Количество выделенных блоков для файла</li>\n<li>Указатели на блоки данных файла - самое важное!</li>\n</ul>\n\nПо сути, индексные узлы хранят всю информацию о файле, за исключением имени файла и самого файла!\n\n<b>Когда создаются индексные узлы?</b>\n\nПри создании файловой системы также выделяется место для индексных узлов. Существуют алгоритмы, которые определяют, сколько места для индексных узлов вам нужно в зависимости от объема диска и других параметров. Вероятно, вы когда-то в жизни видели сообщения об ошибке из-за нехватки места на диске. То же самое может произойти и с индексными узлами (хотя реже) - вы можете исчерпать индексы и, следовательно, не сможете создавать больше файлов. Помните, что хранение данных зависит как от данных, так и от базы данных (индексов).\n\nЧтобы узнать, сколько индексов осталось на вашей системе, используйте команду <b>df -i</b>\n\n<b>Информация об индексах</b>\n\nИндексы идентифицируются по номерам, при создании файла ему присваивается номер индекса, номер присваивается последовательно. Однако иногда вы можете заметить, что при создании нового файла ему присваивается номер индекса, который меньше, чем у других, это происходит потому, что удаленные индексы могут быть использованы повторно другими файлами. Для просмотра номеров индексов используйте <b>ls -li</b>:\n\n<pre>\npete@icebox:~$ ls -li\n140 drwxr-xr-x 2 pete pete 6 Jan 20 20:13 Desktop\n141 drwxr-xr-x 2 pete pete 6 Jan 20 20:01 Documents\n</pre>\n\nПервое поле в этой команде показывает номер индекса.\n\nВы также можете увидеть подробную информацию о файле с помощью команды stat, она также сообщает вам информацию об индексе.\n\n<pre>\npete@icebox:~$ stat ~/Desktop/\n  File: ‘/home/pete/Desktop/’\n  Size: 6               Blocks: 0          IO Block: 4096   directory\nDevice: 806h/2054d      Inode: 140         Links: 2\nAccess: (0755/drwxr-xr-x)  Uid: ( 1000/   pete)   Gid: ( 1000/   pete)\nAccess: 2016-01-20 20:13:50.647435982 -0800\nModify: 2016-01-20 20:13:06.191675843 -0800\nChange: 2016-01-20 20:13:06.191675843 -0800\n Birth: -\n</pre>\n\n\n<b>Как индексы находят файлы?</b>\n\nМы знаем, что наши данные где-то на диске, к сожалению, вероятно, они не были сохранены последовательно, поэтому нам нужно использовать индексы. Индексы указывают на фактические блоки данных ваших файлов. В типичной файловой системе (не все работают одинаково), каждый индекс содержит 15 указателей, первые 12 указателей указывают прямо на блоки данных. 13-й указатель указывает на блок, содержащий указатели на другие блоки, 14-й указатель указывает на другой вложенный блок указателей, а 15-й указатель снова указывает на другой блок указателей! Запутано, я знаю! Это делается для того, чтобы структура индекса оставалась одинаковой для каждого индекса, но при этом можно ссылаться на файлы разного размера. Если у вас небольшой файл, вы можете быстрее найти его с помощью первых 12 прямых указателей, более крупные файлы могут быть найдены с помощью вложенных указателей. В любом случае структура индекса остается такой же.",
  "exercise": "Наблюдайте за некоторыми номерами индексов для разных файлов, какие обычно создаются первыми?",
  "quizQuestion": "Как узнать, сколько индексов осталось на вашей системе?",
  "quizAnswer": "df -i",
  "slug": "inodes"
}