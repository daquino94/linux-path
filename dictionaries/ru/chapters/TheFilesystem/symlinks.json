{
  "id": 12,
  "title": "symlinks",
  "lessonContent": "Давайте воспользуемся предыдущим примером информации об инодах: \n\n<pre>\npete@icebox:~$ ls -li\n140 drwxr-xr-x 2 pete pete 6 Jan 20 20:13 Desktop\n141 drwxr-xr-x 2 pete pete 6 Jan 20 20:01 Documents\n</pre>\n\nВозможно, вы заметили, что мы пропускали третье поле в команде ls, это поле - количество ссылок. Количество ссылок - это общее количество жёстких ссылок на файл, что сейчас для вас ничего не значит. Поэтому давайте сначала обсудим ссылки. \n\n<b>Символические ссылки</b>\n\nВ операционной системе Windows существуют ярлыки, которые являются псевдонимами для других файлов. Если вы что-то делаете с оригинальным файлом, вы потенциально можете нарушить ярлык. В Linux аналогом ярлыков являются символические ссылки (или мягкие ссылки или симлинки). Симлинки позволяют нам ссылаться на другой файл по его имени файла. Еще один тип ссылок, найденных в Linux, - это жёсткие ссылки, которые на самом деле являются другим файлом с ссылкой на инод. Давайте посмотрим, что я имею в виду на практике, начиная с символических ссылок.\n\n<pre>\npete@icebox:~/Desktop$ echo 'myfile' > myfile\npete@icebox:~/Desktop$ echo 'myfile2' > myfile2\npete@icebox:~/Desktop$ echo 'myfile3' > myfile3\n\npete@icebox:~/Desktop$ ln -s myfile myfilelink\npete@icebox:~/Desktop$ ls -li\ntotal 12\n  151 -rw-rw-r-- 1 pete pete 7 Jan 21 21:36 myfile\n93401 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile2\n93402 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile3\n93403 lrwxrwxrwx 1 pete pete 6 Jan 21 21:39 myfilelink -> myfile\n</pre>\n\nВы видите, что я создал символическую ссылку с именем myfilelink, которая указывает на myfile. Символические ссылки обозначаются ->. Обратите внимание, что у меня появился новый номер инода, симлинки - это просто файлы, которые указывают на имена файлов. Когда вы изменяете символическую ссылку, изменяется и файл. Номера инодов уникальны для файловых систем, вы не можете иметь два одинаковых номера инода в одной файловой системе, что означает, что вы не можете ссылаться на файл в другой файловой системе по его номеру инода. Однако, если вы используете символические ссылки, они не используют номера инодов, они используют имена файлов, поэтому их можно ссылаться на разные файловые системы. \n\n<b>Жёсткие ссылки</b>\n\nДавайте посмотрим пример жёсткой ссылки:\n\n<pre>\npete@icebox:~/Desktop$ ln myfile2 myhardlink\npete@icebox:~/Desktop$ ls -li\ntotal 16\n  151 -rw-rw-r-- 1 pete pete 7 Jan 21 21:36 myfile\n93401 -rw-rw-r-- 2 pete pete 8 Jan 21 21:36 myfile2\n93402 -rw-rw-r-- 1 pete pete 8 Jan 21 21:36 myfile3\n93403 lrwxrwxrwx 1 pete pete 6 Jan 21 21:39 myfilelink -> myfile\n93401 -rw-rw-r-- 2 pete pete 8 Jan 21 21:36 myhardlink\n</pre>\n\nЖёсткая ссылка просто создает другой файл с ссылкой на тот же инод. Поэтому если я изменил содержимое myfile2 или myhardlink, изменения будут видны в обоих, но если я удалю myfile2, файл по-прежнему будет доступен через myhardlink. Здесь и вступает в игру количество ссылок в команде ls. Количество ссылок - это количество жёстких ссылок на инод, когда вы удаляете файл, это уменьшит это количество ссылок. Инод удаляется только тогда, когда все жёсткие ссылки на инод удалены. Когда вы создаете файл, его количество ссылок равно 1, потому что это единственный файл, который указывает на этот инод. В отличие от символических ссылок, жёсткие ссылки не распространяются на файловые системы, потому что иноды уникальны для файловой системы. \n\n<b>Создание символической ссылки</b>\n\n<pre>\n$ ln -s myfile mylink</pre>\n\nДля создания символической ссылки используйте команду ln с -s для символической ссылки, указываете целевой файл и затем имя ссылки. \n\n<b>Создание жёсткой ссылки</b>\n\n<pre>\n$ ln somefile somelink</pre>\n\nАналогично созданию символической ссылки, за исключением того, что на этот раз вы не указываете -s.",
  "exercise": "Поиграйтесь с созданием символических и жёстких ссылок, удалите несколько и посмотрите, что произойдет.",
  "quizQuestion": "Какая команда используется для создания символической ссылки?",
  "quizAnswer": "ln -s",
  "slug": "symlinks"
}