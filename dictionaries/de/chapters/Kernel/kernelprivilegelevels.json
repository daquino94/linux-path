{
  "id": 2,
  "title": "Privilegieniveaus",
  "lessonContent": "Die nächsten Lektionen werden ziemlich theoretisch, also wenn du nach praktischen Inhalten suchst, kannst du weiterblättern und später zurückkommen.\n\nWarum haben wir unterschiedliche Abstraktionsebenen für den Benutzerbereich und den Kernel? Warum können wir nicht beide Kräfte in einer Ebene kombinieren? Nun, es gibt einen sehr guten Grund, warum diese beiden Ebenen getrennt existieren. Sie arbeiten in verschiedenen Modi, der Kernel arbeitet im Kernelmodus und der Benutzerbereich arbeitet im Benutzermodus. \n\nIm Kernelmodus hat der Kernel vollständigen Zugriff auf die Hardware, er kontrolliert alles. Im Benutzermodus gibt es nur einen sehr kleinen sicheren Speicher und eine CPU, auf die du zugreifen darfst. Im Grunde genommen wird alles, was mit der Hardware zu tun hat, wie das Lesen von Daten von unseren Festplatten, das Schreiben von Daten auf unsere Festplatten, die Steuerung unseres Netzwerks usw., im Kernelmodus ausgeführt. Warum ist das notwendig? Stell dir vor, deine Maschine wäre mit Spyware infiziert, du möchtest nicht, dass sie direkten Zugriff auf die Hardware deines Systems hat. Sie könnte auf alle deine Daten, deine Webcam usw. zugreifen, und das wäre nicht gut. \n\nDiese verschiedenen Modi werden als Privilegieniveaus bezeichnet (passend benannt nach den Privilegien, die du erhältst) und werden oft als Schutzringe beschrieben. Um das Bild zu vereinfachen, sagen wir, du erfährst, dass Britney Spears in deiner Stadt in deinem örtlichen Klerb ist, sie wird von ihren Groupies geschützt, dann von ihren persönlichen Leibwächtern und dann vom Türsteher vor dem Klerb. Du möchtest ihr Autogramm bekommen (warum auch nicht?), aber du kommst nicht zu ihr, weil sie stark geschützt ist. Die Ringe funktionieren genauso, der innerste Ring entspricht dem höchsten Privilegieniveau. Es gibt zwei Hauptniveaus oder Modi in einer x86-Computerarchitektur. Ring #3 ist das Privileg, in dem Benutzermodusanwendungen ausgeführt werden, Ring #0 ist das Privileg, in dem der Kernel ausgeführt wird. Ring #0 kann jede Systemanweisung ausführen und genießt vollstes Vertrauen. Jetzt, da wir wissen, wie diese Privilegieniveaus funktionieren, wie können wir überhaupt etwas auf unsere Hardware schreiben? Werden wir nicht immer in einem anderen Modus als dem Kernel sein? \n\nDie Antwort lautet: mit Systemaufrufen. Systemaufrufe ermöglichen es uns, eine privilegierte Anweisung im Kernelmodus auszuführen und dann in den Benutzermodus zurückzukehren.",
  "exercise": "Keine Übungen für diese Lektion.",
  "quizQuestion": "Welche Ringnummer hat die höchsten Privilegien?",
  "quizAnswer": "0",
  "slug": "kernelprivilegieniveaus"
}