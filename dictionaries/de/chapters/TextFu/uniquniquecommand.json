{
  "id": 14,
  "title": "uniq (Einzigartig)",
  "lessonContent": "Der uniq (einzigartig) Befehl ist ein weiteres nützliches Werkzeug zum Parsen von Text.\n\nAngenommen, Sie hätten eine Datei mit vielen Duplikaten:\n\n<pre>\nreading.txt\nbook\nbook\npaper\npaper\narticle\narticle\nmagazine\n</pre>\n\nUnd Sie wollten die Duplikate entfernen, dann können Sie den uniq Befehl verwenden:\n\n<pre>$ uniq reading.txt\nbook\npaper\narticle\nmagazine</pre>\n\nLassen Sie uns die Anzahl der Vorkommen einer Zeile erhalten:\n\n<pre>$ uniq -c reading.txt\n2 book\n2 paper\n2 article\n1 magazine</pre>\n\nLassen Sie uns nur eindeutige Werte erhalten:\n\n<pre>$ uniq -u reading.txt\nmagazine</pre>\n\nLassen Sie uns nur doppelte Werte erhalten:\n\n<pre>$ uniq -d reading.txt\nbook\npaper\narticle\n</pre>\n\n<b>Hinweis</b>: uniq erkennt keine doppelten Zeilen, es sei denn, sie sind benachbart. Zum Beispiel:\n\nAngenommen, Sie hätten eine Datei mit nicht benachbarten Duplikaten:\n\n<pre>\nreading.txt\nbook\npaper\nbook\npaper\narticle\nmagazine\narticle\n</pre>\n\n<pre>$ uniq reading.txt\nreading.txt\nbook\npaper\nbook\npaper\narticle\nmagazine\narticle</pre>\n\nDas von uniq zurückgegebene Ergebnis enthält alle Einträge im Gegensatz zum allerersten Beispiel.\n\nUm diese Einschränkung von uniq zu überwinden, können wir sort in Kombination mit uniq verwenden:\n\n<pre>\n$ sort reading.txt | uniq\narticle\nbook\nmagazine\npaper</pre>",
  "exercise": "Welches Ergebnis würden Sie erhalten, wenn Sie uniq -uc versuchen?",
  "quizQuestion": "Welchen Befehl würden Sie verwenden, um Duplikate in einer Datei zu entfernen?",
  "quizAnswer": "uniq",
  "slug": "uniquniquecommand"
}