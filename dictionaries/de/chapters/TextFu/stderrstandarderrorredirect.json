{
  "id": 3,
  "title": "stderr (Standard Error)",
  "lessonContent": "Lassen Sie uns jetzt etwas Neues ausprobieren, versuchen wir den Inhalt eines Verzeichnisses aufzulisten, das auf Ihrem System nicht existiert, und leiten Sie die Ausgabe erneut in die Datei peanuts.txt um.\n\n<pre>$ ls /fake/directory > peanuts.txt </pre>\n\nWas Sie sehen sollten, ist: \n\n<pre>ls: kann auf /fake/directory nicht zugreifen: Datei oder Verzeichnis nicht gefunden</pre>\n\nJetzt denken Sie wahrscheinlich, sollte diese Nachricht nicht an die Datei gesendet worden sein? Tatsächlich gibt es hier einen weiteren E/A-Stream namens Standardfehler (stderr). Standardmäßig sendet stderr seine Ausgabe ebenfalls auf den Bildschirm, es handelt sich um einen völlig anderen Stream als stdout. Sie müssen also seine Ausgabe auf eine andere Weise umleiten. \n\nLeider ist der Umleiter nicht so nett wie die Verwendung von <b>&lt;</b> oder <b>&gt;</b>, aber er kommt dem nahe. Wir müssen Dateideskriptoren verwenden. Ein Dateideskriptor ist eine nicht negative Zahl, die verwendet wird, um auf eine Datei oder einen Stream zuzugreifen. Wir werden später ausführlich darauf eingehen, aber vorerst wissen Sie, dass der Dateideskriptor für stdin, stdout und stderr jeweils 0, 1 und 2 ist. \n\nWenn wir jetzt also unseren stderr in die Datei umleiten wollen, können wir dies tun: \n\n<pre>$ ls /fake/directory 2> peanuts.txt</pre>\n\nSie sollten nur die stderr-Nachrichten in peanuts.txt sehen. \n\nWas ist, wenn ich sowohl stderr als auch stdout in der peanuts.txt-Datei sehen möchte? Es ist auch möglich, dies mit Dateideskriptoren zu tun: \n\n<pre>$ ls /fake/directory > peanuts.txt 2>&1</pre>\n\nDies sendet die Ergebnisse von ls /fake/directory an die Datei peanuts.txt und leitet dann stderr über 2>&1 an stdout weiter. Die Reihenfolge der Operationen ist hier wichtig, 2>&1 sendet stderr an das, worauf stdout zeigt. In diesem Fall zeigt stdout auf eine Datei, daher sendet 2>&1 stderr auch an eine Datei. Wenn Sie also die Datei peanuts.txt öffnen, sollten Sie sowohl stderr als auch stdout sehen. In unserem Fall gibt der obige Befehl nur stderr aus.\n\nEs gibt einen kürzeren Weg, um sowohl stdout als auch stderr in eine Datei umzuleiten:\n\n<pre>$ ls /fake/directory &> peanuts.txt</pre>\n\nWas ist, wenn ich nichts davon haben möchte und die stderr-Nachrichten komplett loswerden möchte? Nun, Sie können die Ausgabe auch in eine spezielle Datei namens /dev/null umleiten, die jegliche Eingabe verwirft.\n\n<pre>$ ls /fake/directory 2> /dev/null</pre>",
  "exercise": "Was macht der folgende Befehl? \n\n<pre>$ ls /fake/directory >> /dev/null 2>&1</pre>",
  "quizQuestion": "Was ist der Umleiter für stderr?",
  "quizAnswer": "2>",
  "slug": "stderrstandarderrorredirect"
}