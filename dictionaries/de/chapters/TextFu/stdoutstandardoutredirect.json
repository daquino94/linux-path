{
  "id": 1,
  "title": "stdout (Standard Out)",
  "lessonContent": "Inzwischen sind wir mit vielen Befehlen und ihrer Ausgabe vertraut geworden, und das bringt uns zu unserem nächsten Thema: Ein- und Ausgabeströme (Input/Output-Streams). Führen wir den folgenden Befehl aus und besprechen, wie das funktioniert. \n\n<pre>$ echo Hallo Welt > peanuts.txt</pre>\n\nWas ist gerade passiert? Überprüfen Sie das Verzeichnis, in dem Sie diesen Befehl ausgeführt haben, und Sie sollten eine Datei namens peanuts.txt sehen. Schauen Sie in diese Datei hinein, und Sie sollten den Text Hallo Welt sehen. In einem Befehl sind viele Dinge passiert, also zerlegen wir ihn. \n\nLassen Sie uns zuerst den ersten Teil zerlegen: \n\n<pre>$ echo Hallo Welt</pre>\n\nWir wissen, dass dies Hallo Welt auf dem Bildschirm ausgibt, aber wie? Prozesse verwenden Ein- und Ausgabeströme, um Eingaben zu erhalten und Ausgaben zurückzugeben. Standardmäßig nimmt der echo-Befehl die Eingabe (Standard-Eingabe oder stdin) von der Tastatur entgegen und gibt die Ausgabe (Standardausgabe oder stdout) auf dem Bildschirm aus. Deshalb sehen Sie, wenn Sie echo Hallo Welt in Ihrer Shell eingeben, Hallo Welt auf dem Bildschirm. Die Umleitung von Ein- und Ausgaben ermöglicht es uns jedoch, dieses Standardverhalten zu ändern und bietet uns eine größere Dateiflexibilität. \n\nLassen Sie uns zum nächsten Teil des Befehls übergehen: \n\n<pre> > </pre>\n\nDas > ist ein Umleitungsoperator, der es uns ermöglicht, festzulegen, wohin die Standardausgabe geht. Er ermöglicht es uns, die Ausgabe von echo Hallo Welt an eine Datei anstelle des Bildschirms zu senden. Wenn die Datei noch nicht existiert, wird sie für uns erstellt. Wenn sie jedoch bereits existiert, wird sie überschrieben (je nach verwendeter Shell können Sie eine Shell-Flagge hinzufügen, um dies zu verhindern). \n\nUnd so funktioniert im Grunde die Umleitung von stdout!\n\nNun, sagen wir, ich möchte meine peanuts.txt nicht überschreiben, zum Glück gibt es auch einen Umleitungsoperator dafür, >>: \n\n<pre>$ echo Hallo Welt >> peanuts.txt</pre>\n\nDies fügt Hallo Welt am Ende der Datei peanuts.txt an. Wenn die Datei noch nicht existiert, wird sie für uns erstellt, wie es der >-Umleitungsoperator getan hat!",
  "exercise": "Probieren Sie ein paar Befehle aus: \n\n<pre>\n$ ls -l /var/log > myoutput.txt\n$ echo Hallo Welt > rm\n$ > somefile.txt \n</pre>",
  "quizQuestion": "Welchen Umleitungsoperator verwenden Sie, um die Ausgabe an eine Datei anzuhängen?",
  "quizAnswer": ">>",
  "slug": "stdoutstandardoutredirect"
}