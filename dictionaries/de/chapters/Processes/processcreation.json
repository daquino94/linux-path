{
  "id": 4,
  "title": "Prozesserstellung",
  "lessonContent": "Auch diese Lektion und die nächste sind rein informativ, um Ihnen zu zeigen, was unter der Oberfläche passiert. Gehen Sie gerne noch einmal darauf zurück, nachdem Sie etwas mehr mit Prozessen gearbeitet haben.\n\nWenn ein neuer Prozess erstellt wird, klonen sich im Grunde genommen ein bestehender Prozess selbst mithilfe eines sogenannten Fork-Systemaufrufs (Systemaufrufe werden erst sehr weit in der Zukunft diskutiert). Der Fork-Systemaufruf erstellt einen weitgehend identischen Kindprozess. Dieser Kindprozess erhält eine neue Prozess-ID (PID), und der ursprüngliche Prozess wird sein Elternprozess und hat etwas, das als Elternprozess-ID <b>PPID</b> bezeichnet wird. Anschließend kann der Kindprozess entweder weiterhin dasselbe Programm verwenden, das sein Elternteil zuvor verwendet hat, oder häufiger den execve-Systemaufruf verwenden, um ein neues Programm zu starten. Dieser Systemaufruf zerstört das von Kernel für diesen Prozess implementierte Speichermanagement und richtet neue für das neue Programm ein. \n\nWir können dies in Aktion sehen:\n\n<pre>$ ps l</pre>\n\nDie Option l gibt uns eine „lange Format“- oder noch detailliertere Ansicht unserer laufenden Prozesse. Sie sehen eine Spalte mit der Bezeichnung <b>PPID</b>, dies ist die Eltern-ID. Schauen Sie nun auf Ihren Terminal, Sie sehen einen laufenden Prozess, das ist Ihre Shell, also auf meinem System habe ich einen Prozess, der bash ausführt. Erinnern Sie sich daran, als Sie den Befehl ps l ausgeführt haben, haben Sie ihn von dem Prozess ausgeführt, der bash ausführte. Nun sehen Sie, dass die <b>PID</b> der bash-Shell die <b>PPID</b> des <b>ps l</b>-Befehls ist.\n\nWenn also jeder Prozess einen Elternteil haben muss und sie nur Forks voneinander sind, muss es einen Mutterprozess aller Prozesse geben, oder? Sie haben recht, wenn das System hochfährt, erstellt der Kernel einen Prozess namens <b>init</b>, der eine PID von 1 hat. Der init-Prozess kann nicht beendet werden, es sei denn, das System wird heruntergefahren. Er läuft mit Root-Berechtigungen und führt viele Prozesse aus, die das System am Laufen halten. Wir werden uns im Kurs zum Systemstart genauer mit init befassen, aber vorerst wissen Sie, dass es der Prozess ist, der alle anderen Prozesse erzeugt.",
  "exercise": "Schauen Sie sich Ihre laufenden Prozesse an. Können Sie erkennen, welche anderen Prozesse Eltern haben?",
  "quizQuestion": "Welcher Systemaufruf erstellt einen neuen Prozess?",
  "quizAnswer": "fork",
  "slug": "prozesserstellung"
}