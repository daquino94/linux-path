{
  "id": 7,
  "title": "Prozessberechtigungen",
  "lessonContent": "Lassen Sie uns kurz auf Prozessberechtigungen eingehen. Erinnern Sie sich daran, wie ich Ihnen gesagt habe, dass wenn Sie das Passwort mit dem SUID-Berechtigungsbit ausführen, das Programm als Root ausgeführt wird? Das stimmt, aber bedeutet das, dass Sie als vorübergehender Root-Benutzer die Passwörter anderer Benutzer ändern können? Nein, zum Glück nicht!\n\nDas liegt an den vielen UIDs, die Linux implementiert. Jeder Prozess hat drei UIDs zugeordnet:\n\nWenn Sie einen Prozess starten, wird er mit denselben Berechtigungen wie der Benutzer oder die Gruppe, die ihn gestartet hat, ausgeführt. Dies wird als <b>effektive Benutzer-ID</b> bezeichnet. Diese UID wird verwendet, um einem Prozess Zugriffsrechte zu gewähren. Wenn also Bob den Befehl touch ausführt, wird der Prozess als er ausgeführt und alle von ihm erstellten Dateien gehören ihm.\n\nEs gibt eine weitere UID, die als <b>reale Benutzer-ID</b> bezeichnet wird. Dies ist die ID des Benutzers, der den Prozess gestartet hat. Diese werden verwendet, um herauszufinden, wer der Benutzer ist, der den Prozess gestartet hat.\n\nEine letzte UID ist die <b>gespeicherte Benutzer-ID</b>, die es einem Prozess ermöglicht, zwischen der effektiven UID und der realen UID hin- und herzuschalten. Dies ist nützlich, da wir nicht möchten, dass unser Prozess die ganze Zeit mit erhöhten Rechten läuft. Es ist einfach eine gute Praxis, spezielle Berechtigungen nur zu bestimmten Zeiten zu verwenden.\n\nLassen Sie uns nun all dies zusammenfügen, indem wir uns den Befehl passwd noch einmal ansehen. \n\nWenn Sie den Befehl passwd ausführen, ist Ihre effektive UID Ihre Benutzer-ID, sagen wir vorerst 500. Oh, aber warten Sie, erinnern Sie sich daran, dass der Befehl passwd die SUID-Berechtigung aktiviert hat. Wenn Sie ihn also ausführen, ist Ihre effektive UID jetzt 0 (0 ist die UID von root). Jetzt kann dieses Programm auf Dateien als root zugreifen.\n\nAngenommen, Sie bekommen einen kleinen Vorgeschmack auf die Macht und möchten Sallys Passwort ändern. Sally hat eine UID von 600. Nun, Sie haben Pech, denn der Prozess hat auch Ihre reale UID in diesem Fall 500. Er weiß, dass Ihre UID 500 ist und Sie daher das Passwort der UID 600 nicht ändern können. (Dies wird natürlich immer umgangen, wenn Sie ein Superuser auf einem Rechner sind und alles kontrollieren und ändern können).\n\nDa Sie passwd ausgeführt haben, wird der Prozess mit Ihrer realen UID gestartet und die UID des Besitzers der Datei (effektive UID) wird gespeichert, damit Sie zwischen den beiden wechseln können. Es ist nicht erforderlich, alle Dateien mit Root-Zugriff zu ändern, wenn es nicht erforderlich ist. \n\nMeistens sind die reale UID und die effektive UID gleich, aber in Fällen wie dem passwd-Befehl ändern sie sich.",
  "exercise": "Wir haben noch nicht über Prozesse gesprochen, aber wir können uns trotzdem ansehen, wie diese Änderung in Echtzeit passiert: \n\n<ol>\n<li>Öffnen Sie ein Terminalfenster und führen Sie den Befehl aus: <b>watch -n 1 \"ps aux | grep passwd\"</b>. Dies wird den passwd-Prozess beobachten.</li>\n<li>Öffnen Sie ein zweites Terminalfenster und führen Sie aus: <b>passwd</b></li>\n<li>Schauen Sie sich das erste Terminalfenster an, Sie werden einen Prozess für passwd sehen. Die erste Spalte in der Prozesstabelle ist die effektive Benutzer-ID, und siehe da, es ist der Root-Benutzer!</li>\n</ol>",
  "quizQuestion": "Welche UID entscheidet, welchen Zugriff gewährt wird?",
  "quizAnswer": "effektive",
  "slug": "prozessberechtigungen"
}