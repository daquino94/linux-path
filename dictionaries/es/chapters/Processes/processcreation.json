{
  "id": 4,
  "title": "Creación de procesos",
  "lessonContent": "Nuevamente, esta lección y la siguiente son puramente informativas para que puedas ver lo que hay bajo el capó, siéntete libre de volver a esto una vez que hayas trabajado un poco más con los procesos.\n\nCuando se crea un nuevo proceso, un proceso existente básicamente se clona a sí mismo utilizando algo llamado la llamada al sistema fork (las llamadas al sistema se discutirán en un futuro muy lejano). La llamada al sistema fork crea un proceso hijo casi idéntico, este proceso hijo toma un nuevo ID de proceso (PID) y el proceso original se convierte en su proceso padre y tiene algo llamado un ID de proceso padre <b>PPID</b>. Después, el proceso hijo puede continuar usando el mismo programa que estaba usando su padre antes o más a menudo usar la llamada al sistema execve para lanzar un nuevo programa. Esta llamada al sistema destruye la gestión de memoria que el kernel había establecido para ese proceso y configura nuevas para el nuevo programa. \n\nPodemos ver esto en acción:\n\n<pre>$ ps l</pre>\n\nLa opción l nos da un formato \"largo\" o una vista aún más detallada de nuestros procesos en ejecución. Verás una columna etiquetada <b>PPID</b>, este es el ID del padre. Ahora mira tu terminal, verás un proceso en ejecución que es tu shell, así que en mi sistema tengo un proceso ejecutando bash. Ahora recuerda cuando ejecutaste el comando ps l, lo estabas ejecutando desde el proceso que estaba ejecutando bash. Ahora verás que el <b>PID</b> del shell bash es el <b>PPID</b> del comando <b>ps l</b>.\n\nEntonces, si cada proceso debe tener un padre y son solo bifurcaciones entre sí, ¿debe haber una madre de todos los procesos, verdad? Tienes razón, cuando el sistema se inicia, el kernel crea un proceso llamado <b>init</b>, tiene un PID de 1. El proceso init no puede ser terminado a menos que el sistema se apague. Se ejecuta con privilegios de root y ejecuta muchos procesos que mantienen el sistema en funcionamiento. Analizaremos más de cerca init en el curso de arranque del sistema, por ahora solo debes saber que es el proceso que genera todos los demás procesos.",
  "exercise": "Observa tus procesos en ejecución, ¿puedes ver qué otros procesos tienen padres?",
  "quizQuestion": "¿Qué llamada al sistema crea un nuevo proceso?",
  "quizAnswer": "fork",
  "slug": "creaciondeprocesos"
}