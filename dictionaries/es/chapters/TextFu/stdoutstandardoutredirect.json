{
  "id": 1,
  "title": "stdout (Standard Out)",
  "lessonContent": "Hasta ahora, nos hemos familiarizado con muchos comandos y su salida, lo que nos lleva a nuestro próximo tema: flujos de E/S (entrada/salida). Ejecutemos el siguiente comando y discutiremos cómo funciona. \n\n<pre>$ echo Hello World > peanuts.txt</pre>\n\n¿Qué acaba de suceder? Bueno, verifica el directorio donde ejecutaste ese comando y verás un archivo llamado peanuts.txt, ábrelo y deberías ver el texto Hello World. Muchas cosas acaban de suceder en un solo comando, así que vamos a analizarlo. \n\nPrimero desglosemos la primera parte: \n\n<pre>$ echo Hello World</pre>\n\nSabemos que esto imprime Hello World en la pantalla, pero ¿cómo? Los procesos utilizan flujos de E/S para recibir entrada y devolver salida. Por defecto, el comando echo toma la entrada (entrada estándar o stdin) del teclado y devuelve la salida (salida estándar o stdout) a la pantalla. Por eso, cuando escribes echo Hello World en tu terminal, obtienes Hello World en la pantalla. Sin embargo, la redirección de E/S nos permite cambiar este comportamiento predeterminado y nos brinda una mayor flexibilidad con los archivos. \n\nPasemos a la siguiente parte del comando: \n\n<pre> > </pre>\n\nEl > es un operador de redirección que nos permite cambiar a dónde va la salida estándar. Nos permite enviar la salida de echo Hello World a un archivo en lugar de a la pantalla. Si el archivo aún no existe, lo creará para nosotros. Sin embargo, si ya existe, lo sobrescribirá (puedes agregar una bandera de terminal para evitar esto dependiendo del shell que estés utilizando).\n\n¡Y básicamente así es como funciona la redirección de stdout!\n\nBueno, digamos que no quiero sobrescribir mi peanuts.txt, afortunadamente también hay un operador de redirección para eso, >>: \n\n<pre>$ echo Hello World >> peanuts.txt</pre>\n\nEsto añadirá Hello World al final del archivo peanuts.txt, si el archivo aún no existe, lo creará para nosotros, como lo hizo con el operador de redirección >!",
  "exercise": "Intenta un par de comandos: \n\n<pre>\n$ ls -l /var/log > myoutput.txt\n$ echo Hello World > rm\n$ > somefile.txt \n</pre>",
  "quizQuestion": "¿Qué operador de redirección utilizas para añadir la salida a un archivo?",
  "quizAnswer": ">>",
  "slug": "stdoutstandardoutredirect"
}